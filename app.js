const express = require('express');
const app = express();
const { compress, decompress } = require('shrink-string')
const server = require('http').Server(app);
const { minify } = require('html-minifier');
const bodyParser = require('body-parser');
const port = process.env.PORT || 80;
app.use(bodyParser.text());
app.use(express.static(__dirname + '/public'));

app.get('/d/:query', async (req, res) => {
    var base64 = req.params.query;
    if(!base64 || !base64.length){
        res.status(403).send('Empty query')
    }else{
        try {
            var html = await decompress(base64);
            res.send(html);
        } catch (error) {
            res.status(403).send('Invalid html')
        }
    }
    
});

app.post('/', async (req, res) => {
    let text = req.body;
    try{
        text = minify(text, {
            removeAttributeQuotes: true,
            collapseWhitespace: true,
            minifyCSS: true,
            minifyJS: true,
            minifyURLs: true,
            removeRedundantAttributes: true,
            collapseBooleanAttributes: true,
            collapseInlineTagWhitespace: true,
            removeStyleLinkTypeAttributes: true,
            removeComments: true,
            removeEmptyAttributes: true,
            removeOptionalTags: true,
            removeEmptyElements: true,
            sortClassName: true,
            sortAttributes: true,
            //includeAutoGeneratedTags: false,
            useShortDoctype: true
        });

        var compressed = await compress(text);
        
        res.send(encodeURIComponent(compressed));
    }catch{
        res.status(400).send("Invalid html");
    }
})

server.listen(port, () => {
  console.log(`Server running at http://localhost:${port}/`);
});
